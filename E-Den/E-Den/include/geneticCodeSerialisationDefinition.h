// geneticCodeSerialisationDefinition.h
// by Franz Koehler 2010
//

#ifndef _E_DEN_GENETIC_CODE_SERIALIZATION_DEFINITION_HEADER_
#define _E_DEN_GENETIC_CODE_SERIALIZATION_DEFINITION_HEADER_

namespace EDen {
  
#define EDEN_TOKEN_SPECIES_START '('
#define EDEN_TOKEN_CLAUSE_START '['
#define EDEN_TOKEN_CONDITION_START '?'
#define EDEN_TOKEN_ACTION_START '!'
#define EDEN_TOKEN_AND '+'
#define EDEN_TOKEN_OR '|'

#define EDEN_TOKEN_ACTION_CHEMICAL_CONSUME 'C'
#define EDEN_TOKEN_ACTION_SPAWN_BODYPART 'S'
#define EDEN_TOKEN_ACTION_ADD_SPAWNPOINT 's'
#define EDEN_TOKEN_ACTION_HURT 'H'
#define EDEN_TOKEN_ACTION_MUTATE 'M'
#define EDEN_TOKEN_ACTION_HEAL 'h'
#define EDEN_TOKEN_ACTION_HEAL_PARENT 'P'
#define EDEN_TOKEN_ACTION_DIE 'X'
#define EDEN_TOKEN_ACTION_GROW 'G'
#define EDEN_TOKEN_ACTION_SHRINK 'g'
#define EDEN_TOKEN_ACTION_EMPTY_STORAGE 'x'
#define EDEN_TOKEN_ACTION_MAX_SIZE 'm'
#define EDEN_TOKEN_ACTION_DROP_SEED 'D'

#define EDEN_TOKEN_CONDITION_CHEMICAL 'C'
#define EDEN_TOKEN_CONDITION_BODYPART_CREATION 'c'
#define EDEN_TOKEN_CONDITION_BODYPART_TYPE 'T'
#define EDEN_TOKEN_CONDITION_BODYPART_STATE 'S'
#define EDEN_TOKEN_CONDITION_SPAWNPOINT_PRESENT 's'
#define EDEN_TOKEN_CONDITION_HEALTH 'H'
#define EDEN_TOKEN_CONDITION_PARENT_HEALTH 'P'
#define EDEN_TOKEN_CONDITION_ORGANISM_LIFETIME 'L'
#define EDEN_TOKEN_CONDITION_BODYPART_SIZE 'G'
#define EDEN_TOKEN_CONDITION_HAS_PARENT 'P'
#define EDEN_TOKEN_CONDITION_CAN_GROW 'g'

} // namespace

#endif