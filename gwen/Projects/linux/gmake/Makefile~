# GNU Make solution makefile autogenerated by Premake
# Type "make help" for usage help

ifndef config
  config=release
endif
export config

PROJECTS := GWEN-DLL GWEN-Static Renderer-SDL2 ImportExport

.PHONY: all clean help $(PROJECTS)

all: $(PROJECTS)

GWEN-DLL: 
	@echo "==== Building GWEN-DLL ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f GWEN-DLL.make

GWEN-Static: 
	@echo "==== Building GWEN-Static ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f GWEN-Static.make

UnitTest: 
	@echo "==== Building UnitTest ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f UnitTest.make

Renderer-OpenGL: 
	@echo "==== Building Renderer-OpenGL ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f Renderer-OpenGL.make

Renderer-SDL2:
	@echo "==== Building Renderer-SDL2 ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f Renderer-SDL2.make

Renderer-OpenGL_DebugFont: 
	@echo "==== Building Renderer-OpenGL_DebugFont ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f Renderer-OpenGL_DebugFont.make

Renderer-SFML: 
	@echo "==== Building Renderer-SFML ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f Renderer-SFML.make

Renderer-SFML2: 
	@echo "==== Building Renderer-SFML2 ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f Renderer-SFML2.make

Renderer-Allegro: 
	@echo "==== Building Renderer-Allegro ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f Renderer-Allegro.make

Sample-CrossPlatform: UnitTest Renderer-OpenGL_DebugFont GWEN-Static
	@echo "==== Building Sample-CrossPlatform ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f Sample-CrossPlatform.make

Sample-SFML: UnitTest Renderer-SFML GWEN-Static
	@echo "==== Building Sample-SFML ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f Sample-SFML.make

Sample-SFML2: UnitTest Renderer-SFML2 GWEN-Static
	@echo "==== Building Sample-SFML2 ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f Sample-SFML2.make

Sample-Allegro: UnitTest Renderer-Allegro GWEN-Static
	@echo "==== Building Sample-Allegro ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f Sample-Allegro.make

ControlFactory: 
	@echo "==== Building ControlFactory ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f ControlFactory.make

ImportExport: 
	@echo "==== Building ImportExport ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f ImportExport.make

clean:
	@${MAKE} --no-print-directory -C . -f GWEN-DLL.make clean
	@${MAKE} --no-print-directory -C . -f GWEN-Static.make clean
	@${MAKE} --no-print-directory -C . -f UnitTest.make clean
	@${MAKE} --no-print-directory -C . -f Renderer-OpenGL.make clean
	@${MAKE} --no-print-directory -C . -f Renderer-SDL2.make clean
	@${MAKE} --no-print-directory -C . -f Renderer-OpenGL_DebugFont.make clean
	@${MAKE} --no-print-directory -C . -f Renderer-SFML.make clean
	@${MAKE} --no-print-directory -C . -f Renderer-SFML2.make clean
	@${MAKE} --no-print-directory -C . -f Renderer-Allegro.make clean
	@${MAKE} --no-print-directory -C . -f Sample-CrossPlatform.make clean
	@${MAKE} --no-print-directory -C . -f Sample-SFML.make clean
	@${MAKE} --no-print-directory -C . -f Sample-SFML2.make clean
	@${MAKE} --no-print-directory -C . -f Sample-Allegro.make clean
	@${MAKE} --no-print-directory -C . -f ControlFactory.make clean
	@${MAKE} --no-print-directory -C . -f ImportExport.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "   release"
	@echo "   debug"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   GWEN-DLL"
	@echo "   GWEN-Static"
	@echo "   UnitTest"
	@echo "   Renderer-OpenGL"
	@echo "   Renderer-OpenGL_DebugFont"
	@echo "   Renderer-SFML"
	@echo "   Renderer-SFML2"
	@echo "   Renderer-Allegro"
	@echo "   Sample-CrossPlatform"
	@echo "   Sample-SFML"
	@echo "   Sample-SFML2"
	@echo "   Sample-Allegro"
	@echo "   ControlFactory"
	@echo "   ImportExport"
	@echo ""
	@echo "For more information, see http://industriousone.com/premake/quick-start"
